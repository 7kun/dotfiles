#!/bin/bash

usage(){
    echo "Usage:"
    echo " run setup: ${0} setup"
    echo " run clean: ${0} clean"
    echo " run tests: ${0} [-q|--quiet] test_list program"
}

TEST_ROOT=Tests
TEST_INPUT=${TEST_ROOT}/input
TEST_OUTPUT=${TEST_ROOT}/output
TEST_SAMPLE_LIST=${TEST_ROOT}/test-list

#if the number of input is not 1, 2 nor 3, display usage
if [ ${#} -ne 1 -a ${#} -ne 2 -a ${#} -ne 3 ]; then
    usage
    exit 1
elif [ ${#} -eq 1 ]; then
    if [ ${1} = "setup" ];then
        echo "clean test folders..."
        rm -rf ${TEST_ROOT}
        echo "setup folders..."
        mkdir ${TEST_ROOT}
        mkdir ${TEST_INPUT}
        mkdir ${TEST_OUTPUT}
        touch ${TEST_SAMPLE_LIST}
    elif [ ${1} = "clean" ];then
        echo "clean test folders..."
        rm -rf ${TEST_ROOT}
    else
        usage
        exit 1
    fi
elif [ ${#} -eq 2 ]; then
    for test in `cat ${TEST_ROOT}/${1}`; do
        if [ ! -r ${TEST_INPUT}/${test}.in -o ! -r ${TEST_OUTPUT}/${test}.out ]; then
            echo "missing or unreadable .in or .out files for test ${test}" >2
            exit 2
        fi

        temp=`mktemp`
        ${2} < ${TEST_INPUT}/${test}.in > ${temp}
        comp=`diff ${temp} ${TEST_OUTPUT}/${test}.out`
        if ! [ ${?} -eq 0 ]; then
            echo Test failed: ${test}
            echo Input:
            echo `cat ${TEST_INPUT}/${test}.in`
            echo Expected:
            echo `cat ${TEST_OUTPUT}/${test}.out`
            echo Actual:
            echo `cat ${temp}`
        fi
        rm ${temp}
    done
else
    if [ ${1} = "-q" -o ${1} = "--quiet" ];then
        for test in `cat ${TEST_ROOT}/${2}`; do
            if [ ! -r ${TEST_INPUT}/${test}.in -o ! -r ${TEST_OUTPUT}/${test}.out ]; then
                echo "missing or unreadable .in or .out files for test ${test}" >2
                exit 2
            else
                temp=`mktemp`
                ${3} < ${TEST_INPUT}/${test}.in > ${temp}
                comp=`diff ${temp} ${TEST_OUTPUT}/${test}.out`
                if ! [ ${?} -eq 0 ]; then
                    echo Test failed: ${test}
                fi
            fi
        done
    else
        usage
    fi
fi
